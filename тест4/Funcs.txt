double FEM::Lamda(int vert, int region)
{
	switch (region)
	{
	case 1:
		return 1;
	case 2:
		return 1;
	default:
		return NAN;
	}
}

double FEM::Gamma(int vert, int region)
{
	switch (region)
	{
	case 1:
		return 1/3;
	case 2:
		return 1;
	default:
		return NAN;
	}
}

double FEM::Function(int vert, int region)
{
	switch (region)
	{
	case 1:
		return 4.0 - vertices[vert].x;
	case 2:
		return 6.0 * vertices[vert].x - 15.0;
	default:
		return NAN;
	}
}

double FEM::Beta(int vert, int eqNum)
{
	switch (eqNum)
	{
	case 1:
		return 1/5;
	case 2:
		return 1/6;
	default:
		return NAN;
	}
}

double FEM::Ubeta(int vert, int eqNum)
{
	switch (eqNum)
	{
	case 1:
		return 6.0 * vertices[vert].x;
	case 2:
		return -3.0 * vertices[vert].x;
	default:
		return NAN;
	}
}

double FEM::Theta(int vert, int eqNum)
{
	switch (eqNum)
	{
	case 1:
		return 0;
	case 2:
		return -6;
	case 3:
		return 0;
	default:
		return NAN;
	}
}

double FEM::Ug(int vert, int eqNum)
{
	switch (eqNum)
	{
	case 1:
		return 2.0 * vertices[vert].x + 5.0;
	default:
		return NAN;
	}
}