double FEM::Lamda(int vert, int region)
{
	switch (region)
	{
	case 1:
		return 1.0;
	case 2:
		return 2.0;
	default:
		return NAN;
	}
}

double FEM::Gamma(int vert, int region)
{
	switch (region)
	{
	case 1:
		return 1.0;
	case 2:
		return 2.0;
	default:
		return NAN;
	}
}

double FEM::Function(int vert, int region)
{
	switch (region)
	{
	case 1:
		return vertices[vert].x + vertices[vert].y;
	case 2:
		return vertices[vert].x +  vertices[vert].y + 6.0;
	default:
		return NAN;
	}
}

double FEM::Beta(int vert, int eqNum)
{
	return 1;
}

double FEM::Ubeta(int vert, int eqNum)
{
	switch (eqNum)
	{
	case 1:
		return 5.0 + vertices[vert].y;
	case 2:
		return 1.0 + vertices[vert].x;
	case 3:
		return 5.0 + vertices[vert].x;
	default:
		return NAN;
	}
}

double FEM::Theta(int vert, int eqNum)
{
	switch (eqNum)
	{
	case 1:
		return 1;
	case 2:
		return -1;
	case 3:
		return 1;
	default:
		return NAN;
	}
}

double FEM::Ug(int vert, int eqNum)
{
	switch (eqNum)
	{
	case 1:
		return 6;
	case 2:
		return 4;
	default:
		return NAN;
	}
}