double FEM::Lamda(int vert, int region)
{
	return 1;
}

double FEM::Gamma(int vert, int region)
{
	switch (region)
	{
	case 1:
		return 5;
	case 2:
		return 0;
	default:
		return NAN;
	}
}

double FEM::Function(int vert, int region)
{
	switch (region)
	{
	case 1:
		return 5.0 * vertices[vert].x + 30.0 * vertices[vert].y - 10.0;
	case 2:
		return 0;
	default:
		return NAN;
	}
}

double FEM::Beta(int vert, int eqNum)
{
	switch (eqNum)
	{
	case 1:
		return 10;
	default:
		return NAN;
	}
}
double FEM::Ubeta(int vert, int eqNum)
{
	switch (eqNum)
	{
	case 1:
		return 6.0 * vertices[vert].y + 2.1;
	default:
		return NAN;
	}
}

double FEM::Theta(int vert, int eqNum)
{
	switch (eqNum)
	{
	case 1:
		return -6;
	case 2:
		return -1;
	case 3:
		return 6;
	default:
		return NAN;
	}
}

double FEM::Ug(int vert, int eqNum)
{
	switch (eqNum)
	{
	case 1:
		return 6.0 * vertices[vert].y + 2.0;
	default:
		return NAN;
	}
}